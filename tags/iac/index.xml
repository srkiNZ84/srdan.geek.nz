<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Iac on Home of Srđan Đukić</title><link>https://srdan.geek.nz/tags/iac/</link><description>Recent content in Iac on Home of Srđan Đukić</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 28 Sep 2021 22:01:55 +1300</lastBuildDate><atom:link href="https://srdan.geek.nz/tags/iac/index.xml" rel="self" type="application/rss+xml"/><item><title>The rise of K8s for infrastructure management</title><link>https://srdan.geek.nz/posts/tuesday-28th-sept/</link><pubDate>Tue, 28 Sep 2021 22:01:55 +1300</pubDate><guid>https://srdan.geek.nz/posts/tuesday-28th-sept/</guid><description>&lt;h1 id="the-rise-of-k8s-for-infrastructure-management">
 The rise of K8s for infrastructure management
 &lt;a class="heading-link" href="#the-rise-of-k8s-for-infrastructure-management">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h1>
&lt;p>One of the typically overlooked aspects of moving to microservice architecture in general (and specificallyK8s for the purposes of this article) is the fact that each service &amp;ldquo;owns&amp;rdquo; its own datastore. Unless constrained by costs, this means a fully managed datastore instance (e.g. RDS). Once we accept that the service owns and manages the creation, upgrades etc&amp;hellip; of its own datastore, it then becomes logical to store the &amp;ldquo;infrastructure code&amp;rdquo; for this next to the application code (i.e. in the same repository). This is good as it really gives the team responsible a sense of autonomy of their own infrastructure and, currently, likely looks like a bunch of Terraform files in a directory in version control, next to the application code.&lt;/p></description></item></channel></rss>