<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Build on Home of Srđan Đukić</title><link>https://srdan.geek.nz/tags/build/</link><description>Recent content in Build on Home of Srđan Đukić</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 02 Oct 2021 22:28:48 +1300</lastBuildDate><atom:link href="https://srdan.geek.nz/tags/build/index.xml" rel="self" type="application/rss+xml"/><item><title>What is Bazel?</title><link>https://srdan.geek.nz/posts/saturday-2nd-october/</link><pubDate>Sat, 02 Oct 2021 22:28:48 +1300</pubDate><guid>https://srdan.geek.nz/posts/saturday-2nd-october/</guid><description>&lt;h1 id="what-is-bazel">
 What is Bazel?
 &lt;a class="heading-link" href="#what-is-bazel">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h1>
&lt;p>Recently I read &lt;a href="https://eng.uber.com/go-monorepo-bazel/" class="external-link" target="_blank" rel="noopener">an article&lt;/a> from the Uber engineering team about how they are using Bazel on their Go monorepo. This prompted me to take a look at Bazel and what it does differently to other build systems.&lt;/p>
&lt;p>&lt;a href="https://bazel.build/" class="external-link" target="_blank" rel="noopener">Bazel&lt;/a> is an open source build and test tool that originally came from Google. The main reasons why you might want to use it instead of the plethora of other build/test tools out there is that is optimised to do dependency management between libraries and services/binaries, regardless of language or framework. As such, it is arguably the perfect tool if you are implementing a polyglot microservice architecture that you version in a single monorepo. Think being able to &amp;ldquo;fan out, fan in&amp;rdquo; efficiently across many different services.&lt;/p></description></item></channel></rss>